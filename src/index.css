@tailwind base;
@tailwind components;
@tailwind utilities;
@import url('https://fonts.googleapis.com/css?family=Lora');
@import url('https://fonts.googleapis.com/css?family=Poppins');

body {
  margin: 0;
  font-family: 'Lora';
  background-color: rgb(248 250 252);
}

.font-poppins {
  font-family: 'Poppins';
}

/* 
* Customizing the react date picker 
* This doesn't feel like the best way to style the calendar, but it's the best solution I came up with
* Was not able to fully style it up to figma spec
*/
.react-datepicker {
  font-family: 'Poppins' !important;
  font-size: 14px !important;
}

.react-datepicker__header {
  background-color: white !important;
  border: 0px !important;
}

.react-datepicker__navigation--next,
.react-datepicker__navigation--previous {
  margin-top: 6px;
}

.react-datepicker__day--selected {
  border-radius: 50% !important;
  color: #025b4b !important;
  background-color: #b3cec9 !important;
}

/* Media queries for responsiveness */
@media screen and (min-width: 1125px) {
  .main-width {
    width: 66.666667%;
  }
}

@media screen and (min-width: 1000px) {
  .main-width {
    width: 75%;
  }
}

@media screen and (max-width: 750px) {
  .main-width {
    width: 100%;
  }

  .control-bar {
    flex-direction: column;
    border-radius: 0px;
  }

  .button-width {
    width: 100%;
  }
}

/* Loading spinner from https://loading.io/css/ */
.lds-ring {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}
.lds-ring div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 64px;
  height: 64px;
  margin: 8px;
  border: 8px solid #e0e9cb;
  border-radius: 50%;
  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #e0e9cb transparent transparent transparent;
}
.lds-ring div:nth-child(1) {
  animation-delay: -0.45s;
}
.lds-ring div:nth-child(2) {
  animation-delay: -0.3s;
}
.lds-ring div:nth-child(3) {
  animation-delay: -0.15s;
}
@keyframes lds-ring {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
